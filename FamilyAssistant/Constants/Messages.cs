using FamilyAssistant.Models;

namespace FamilyAssistant.Constants;

public static class Messages
{
    public const string SorryICantDoThisYet = "üò¨ –ò–∑–≤–∏–Ω–∏—Ç–µ, —è –ø–æ–∫–∞ —á—Ç–æ –Ω–µ —É–º–µ—é —Ç–∞–∫–æ–µ.";

    public const string TypeWhatYouWantToBuy = "üôÑ –ù–∞–ø–∏—à–∏—Ç–µ, —á—Ç–æ –Ω—É–∂–Ω–æ –∫—É–ø–∏—Ç—å?";

    public const string MarkBoughtProducts = "‚úÖ –û—Ç–º–µ—Ç—å—Ç–µ –Ω–∏–∂–µ –ø—Ä–æ–¥—É–∫—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –≤—ã –∫—É–ø–∏–ª–∏.";

    public const string YouBoughtAllProducts = "üëç –û—Ç–ª–∏—á–Ω–æ, –≤—ã –∫—É–ø–∏–ª–∏ –≤—Å–µ –ø—Ä–æ–¥—É–∫—Ç—ã!";

    public const string YouHaveNoProductsToBuy = "üëê –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–æ–¥—É–∫—Ç–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ –∫—É–ø–∏—Ç—å.";

    public static readonly Func<string, string> MarkedThatINeedToBuyThis =
        product => $"‚úÖ –û—Ç–º–µ—Ç–∏–ª —á—Ç–æ –Ω—É–∂–Ω–æ –∫—É–ø–∏—Ç—å {product}.";

    public static readonly Func<string, string> MarkedThatIBoughtThis =
        product => $"‚úÖ –û—Ç–º–µ—Ç–∏–ª —á—Ç–æ –ø—Ä–æ–¥—É–∫—Ç {product} –∫—É–ø–ª–µ–Ω";

    public static readonly Func<ProductToBuyDto[], string> HereAreYourProductsToBuy =
        products =>
        {
            var message = "üõç –í–æ—Ç –ø—Ä–æ–¥—É–∫—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ –∫—É–ø–∏—Ç—å:\n\n";

            var productLines = products
                .Select(x => ProductListItem(x));

            message += $"{string.Join("\n", productLines)}\n\n";
            message += $"–û—Ç–º–µ—Ç–∏—Ç—å –∫—É–ø–ª–µ–Ω–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã –º–æ–∂–Ω–æ –∫–Ω–æ–ø–∫–∞–º–∏ –Ω–∏–∂–µ.";

            return message;
        };

    public static readonly Func<ProductToBuyDto, string> ProductListItem = x =>
    {
        var text = ProductButtonText(x);

        return x.IsBought ? Strikethrough(text) : text;
    };

    public static readonly Func<ProductToBuyDto, string> ProductButtonText =
        x => (x.IsBought ? "‚úî" : "‚ùó") + $" {x.Name} {x.Quantity}";

    private static readonly Func<string, string> Strikethrough = x => $"<s>{x}</s>";
}
